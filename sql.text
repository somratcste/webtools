Mysql basic : 
SELECT title FROM publications WHERE author = 'Charles Dickens';

Database show : 
show databases;

Create Database : 
CREATE DATABASE publications 

Use Database : 
USE publications

Creating User : 
GRANT PRIVILEGES ON database.object TO 'username'@'hostname' IDENTIFIED BY 'password';

Creating a table called classics 
CREATE TABLE classic (
	author VARCHAR(128),
	title VARCHAR(128),
	type VARCHAR(16),
	year CHAR(4) )
	ENGINE MyISAM;
)

Describe classics:
DESCRIBE classics;


Create Table :
CREATE TABLE tablename (fieldname INT UNSIGNED);

Adding auto_increment column id : 
ALTER TABLE classics ADD id INT UNSIGNED  NOT  NULL AUTO_INCREMENT KEY;

Adding the auto_incrementing id column table creation :
CREATE TABLE classics(
	author VARCHAR(128),
	title VARCHAR(128),
	type VARCHAR(128),
	year VARCHAR(16),
	id INT UNSIGNED NOT NULL AUTO_INCREMENT KEY)
	ENGINE MyISAM;

Removind the id column : 
ALTER TABLE classics DROP id;

Adding data to a table : 
INSERT INTO classics (author,title,type,year)
VALUES ('ami','tumi','sei','2015')

All select:
SELECT * FROM classics;

Renaming a table :
ALTER TABLE classics RENAME class;

Changing data type of a column :
ALTER TABLE classics MODIFY year SMALLINT;

Adding a new column : 
ALTER TABLE classics ADD pages SMALLINT UNSIGNED;

Renaming a column : 
ALTER TABLE classics CHANGE type category VARCHAR(16);

Removing a column : 
ALTER TABLE classics DROP pages;

Creating , Viewing and deleting a table : 
CREATE TABLE disposable;
DESCRIBE disposable;
DROP TABLE disposable;
SHOW tables;

Adding index to classic:
ALTER TABLE classics ADD INDEX(author(20)); 
ALTER TABLE classics ADD INDEX(title(20)); 
ALTER TABLE classics ADD INDEX(category(4)); 
ALTER TABLE classics ADD INDEX(year); 
DESCRIBE classics;

Using Create index : 
ALTER TABLE classics ADD INDEX(author(20)); CREATE INDEX author ON classics (author(20));

Creating the table classics with indexes : 
CREATE TABLE classics ( author VARCHAR(128), 
title VARCHAR(128), 
category VARCHAR(16), 
year SMALLINT,
INDEX(author(20)), 
INDEX(title(20)), 
INDEX(category(4)), 
INDEX(year)) 
ENGINE MyISAM;


Primary key  :
ALTER TABLE classics ADD isbn CHAR(13) PRIMARY KEY;

 Populating the isbn column with data and using a primary key : 
 ALTER TABLE classics ADD isbn CHAR(13); 
 UPDATE classics SET isbn='9781598184891' WHERE year='1876'; UPDATE classics SET isbn='9780582506206' WHERE year='1811'; UPDATE classics SET isbn='9780517123201' WHERE year='1856'; 
 UPDATE classics SET isbn='9780099533474' WHERE year='1841'; UPDATE classics SET isbn='9780192814968' WHERE year='1594'; 
 ALTER TABLE classics ADD PRIMARY KEY(isbn); 
 DESCRIBE classics;

  Creating the table classics with a primary key : CREATE TABLE classics ( author VARCHAR(128), 
  title VARCHAR(128), 
  category VARCHAR(16), 
  year SMALLINT, 
  isbn CHAR(13), 
  INDEX(author(20)), 
  INDEX(title(20)), 
  INDEX(category(4)), 
  INDEX(year), 
  PRIMARY KEY (isbn)) 
  ENGINE MyISAM

   Adding a FULLTEXT index to the table classics : ALTER TABLE classics ADD FULLTEXT(author,title);

   Select statement : 
   SELECT author,title FROM classics;

   Counting rows : 
   SELECT COUNT(*) FROM classics;

    Duplicating data : 
    INSERT INTO classics(author, title, category, year, isbn) VALUES('Charles Dickens','Little Dorrit','Fiction','1857', '9780141439969'); 

 With and without the DISTINCT qualifier :  
 SELECT author FROM classics; 
 SELECT DISTINCT author FROM classics;

Removing the new entry :  
DELETE FROM classics WHERE title='Little Dorrit'; 

Using the WHERE keyword : 
SELECT author,title FROM classics WHERE author="Mark Twain";

Using the LIKE qualifier :  
SELECT author,title FROM classics WHERE author LIKE "Charles%"; 

Limiting the number of results returned : 
SELECT author,title FROM classics LIMIT 3; 
SELECT author,title FROM classics LIMIT 1,2; 
SELECT author,title FROM classics LIMIT 3,1;

 Using MATCH ... AGAINST on FULLTEXT indexes : 
 SELECT author,title FROM classics WHERE MATCH(author,title) AGAINST('and'); 
 SELECT author,title FROM classics WHERE MATCH(author,title) AGAINST('old shop'); 
 SELECT author,title FROM classics WHERE MATCH(author,title) AGAINST('tom sawyer');


Using MATCH ... AGAINST ... IN BOOLEAN MODE : 
SELECT author,title FROM classics WHERE MATCH(author,title) AGAINST('+charles -species' IN BOOLEAN MODE); SELECT author,title FROM classics WHERE MATCH(author,title) AGAINST('"origin of"' IN BOOLEAN MODE);

 Using UPDATE ... SET : 
 UPDATE classics SET author='Mark Twain (Samuel Langhorne Clemens)' WHERE author='Mark Twain'; 
 UPDATE classics SET category='Classic Fiction' WHERE category='Fiction'


 Using ORDER BY : 
 SELECT author,title FROM classics ORDER BY author;
 SELECT author,title FROM classics ORDER BY title DESC;
 SELECT author,title,year FROM classics ORDER BY author,year DESC; 


Group by : 
SELECT category,COUNT(author) FROM classics GROUP BY category; 


Joining Tables Together : 
 Creating and populating the customers table 
 CREATE TABLE customers ( name VARCHAR(128), 
 isbn VARCHAR(13), 
 PRIMARY KEY (isbn)) 
 ENGINE MyISAM; 
 INSERT INTO customers(name,isbn) VALUES('Joe Bloggs','9780099533474'); 
 INSERT INTO customers(name,isbn) VALUES('Mary Smith','9780582506206'); 
 INSERT INTO customers(name,isbn) VALUES('Jack Wilson','9780517123201'); SELECT * FROM customers;

 Natural Join : 
 SELECT name,author,title FROM customers NATURAL JOIN classics;

 Join on : 
 SELECT name,author,title FROM customers JOIN classics ON customers.isbn=classics.isbn;

Using as : 
SELECT name,author,title from customers AS cust, classics AS class  WHERE cust.isbn=class.isbn; 

 Using logical operators : 
 SELECT author,title FROM classics WHERE author LIKE "Charles%" AND author LIKE "%Darwin"; 
 ELECT author,title FROM classics WHERE author LIKE "%Mark Twain%" OR author LIKE "%Samuel Langhorne Clemens%"; SELECT author,title FROM classics WHERE author LIKE "Charles%" AND author NOT LIKE "%Darwin"; 

